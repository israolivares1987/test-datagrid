kind: Template
apiVersion: v1
metadata:
  name: d1-dsm-build-deploy-no-ssl-template
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: ${APPLICATION_NAME}-service-certs
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      deploymentconfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - name: ${APPLICATION_NAME}
          image: ${IMAGE}
          imagePullPolicy: Always
          env:
            - name: APP_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: SPRING_CONFIG_LOCATION
              value: "/dsf/config/dsm/,/dsf/config/system/"
            - name: SPRING_PROFILES_ACTIVE
              value: "${SPRING_PROFILES_ACTIVE}"
            - name: SERVER_PORT
              value: "8443"
            - name: LOGGING_CONFIG
              value: "${LOGGING_CONFIG}"
            - name: LOGGING_LEVEL_ROOT
              value: ${LOGGING_LEVEL_ROOT}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: ${LIVELINESS_PROBE_PATH}
              port: 8443
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: ${READINESS_PROBE_PATH}
              port: 8443
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          ports:
          - containerPort: 8443
            protocol: TCP
            name: 8443-tcp
          - containerPort: 8778
            protocol: TCP
            name: jolokia
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
          volumeMounts:
            - name: ${APPLICATION_NAME}
              mountPath: /dsf/config/dsm
        volumes:
          - name: service-certs
            secret:
              secretName: ${APPLICATION_NAME}-service-certs
          - name: ${APPLICATION_NAME}
            configMap:
              name: ${APPLICATION_NAME}
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}:latest"
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8443-tcp
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}-openjdk18
    name: openjdk18-openshift
  spec:
    tags:
    - from:
        kind: DockerImage
        name: registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift
      generation: 1
      importPolicy: {}
      name: latest
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    triggers: []
    source:
      type: Binary
      binary: {}
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: openjdk18-openshift:latest
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}:latest"
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    dockerImageRepository: ''
    tags:
    - name: latest
parameters:
- name: APPLICATION_NAME
  description: The name for the application.
  displayName: Application name
  required: true
- name: LOGGING_CONFIG
  displayName: Logging Config path
  description: path to logback-spring.xml file
  value:
- name: READINESS_PROBE_PATH
  displayName: Readiness Probe path
  description: Path for container readiness check. Should usually be /health
  value: "/clients"
- name: LIVELINESS_PROBE_PATH
  displayName: Liveliness Probe path
  description: Path for container liveliness check. This should usually be /ping
  value: "/clients"
- name: LOGGING_LEVEL_ROOT
  displayName: Root Logging Level
  description: Logging level to pass to log config file
  value: "INFO"
- name: SPRING_PROFILES_ACTIVE
  description: Active Spring Profiles. This can be used to switch configuration values
  displayName: Active Spring Profiles
  required: false
  value: "kubernetes"
- name: CPU_REQUEST
  description: The amount of CPU to request for the pod.
  displayName: CPU Request
  value: "200m"
  required: true
- name: CPU_LIMIT
  description: The CPU limit for the pod.
  displayName: CPU Limit
  value: "400m"
  required: true
- name: MEMORY_REQUEST
  description: The amount of memory to request for the pod.
  displayName: Memory Request
  value: "200Mi"
  required: true
- name: MEMORY_LIMIT
  description: The memory limit for the pod.
  displayName: Memory Limit
  value: "400Mi"
  required: true
